version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: .docker/Dockerfile
    image: laravel-app
    container_name: laravel-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - .:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - laravel

  web:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - .:/var/www
      - ./.docker/nginx/conf.d:/etc/nginx/conf.d
    networks:
      - laravel

  db:
    image: postgres
    container_name: postgres-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: laravel
      POSTGRES_USER: laraveluser
      POSTGRES_PASSWORD: laravelpass
    ports:
      - '5432:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - laravel

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.0
    container_name: elasticsearch
    environment:
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      discovery.type: single-node
      xpack.security.enabled: false
    ports:
      - "9200:9200"
    networks:
      - laravel
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    deploy:
      resources:
        limits:
          memory: 2G

  logstash:
    image: docker.elastic.co/logstash/logstash:8.9.0
    container_name: logstash
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    ports:
      - "5044:5044"
    networks:
      - laravel
    volumes:
      - ./.docker/logstash/config:/usr/share/logstash/config
      - ./.docker/logstash/pipeline:/usr/share/logstash/pipeline
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:8.9.0
    container_name: kibana
    ports:
      - "5601:5601"
    networks:
      - laravel
    depends_on:
      - elasticsearch

networks:
  laravel:
    driver: bridge

volumes:
  postgres-data:
    driver: local
  elasticsearch-data:
    driver: local
